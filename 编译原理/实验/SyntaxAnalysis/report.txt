---------------------step0---------------------------
state stack: { 0 }
string stack: { $ }
input token: (0,id,i),(16,=,_),(1,num,0),(15,;,_),(0,id,j),(16,=,_),(1,num,4),(15,;,_),(0,id,k),(16,=,_),(1,num,5),(15,;,_),(0,id,q),(16,=,_),(1,num,0),(15,;,_),(7,while,_),(9,(,_),(0,id,i),(21,<,_),(1,num,10),(10,),_),(8,do,_),(30,{,_),(5,if,_),(9,(,_),(9,(,_),(0,id,i),(20,>,_),(1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step1---------------------------
state stack: { 0,4 }
string stack: { $,id }
input token: (16,=,_),(1,num,0),(15,;,_),(0,id,j),(16,=,_),(1,num,4),(15,;,_),(0,id,k),(16,=,_),(1,num,5),(15,;,_),(0,id,q),(16,=,_),(1,num,0),(15,;,_),(7,while,_),(9,(,_),(0,id,i),(21,<,_),(1,num,10),(10,),_),(8,do,_),(30,{,_),(5,if,_),(9,(,_),(9,(,_),(0,id,i),(20,>,_),(1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step2---------------------------
state stack: { 0,4,42 }
string stack: { $,id,= }
input token: (1,num,0),(15,;,_),(0,id,j),(16,=,_),(1,num,4),(15,;,_),(0,id,k),(16,=,_),(1,num,5),(15,;,_),(0,id,q),(16,=,_),(1,num,0),(15,;,_),(7,while,_),(9,(,_),(0,id,i),(21,<,_),(1,num,10),(10,),_),(8,do,_),(30,{,_),(5,if,_),(9,(,_),(9,(,_),(0,id,i),(20,>,_),(1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step3---------------------------
state stack: { 0,4,42,56 }
string stack: { $,id,=,num }
input token: (15,;,_),(0,id,j),(16,=,_),(1,num,4),(15,;,_),(0,id,k),(16,=,_),(1,num,5),(15,;,_),(0,id,q),(16,=,_),(1,num,0),(15,;,_),(7,while,_),(9,(,_),(0,id,i),(21,<,_),(1,num,10),(10,),_),(8,do,_),(30,{,_),(5,if,_),(9,(,_),(9,(,_),(0,id,i),(20,>,_),(1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step4---------------------------
state stack: { 0,4,42,56 }
string stack: { $,id,=,num }
input token: (15,;,_),(0,id,j),(16,=,_),(1,num,4),(15,;,_),(0,id,k),(16,=,_),(1,num,5),(15,;,_),(0,id,q),(16,=,_),(1,num,0),(15,;,_),(7,while,_),(9,(,_),(0,id,i),(21,<,_),(1,num,10),(10,),_),(8,do,_),(30,{,_),(5,if,_),(9,(,_),(9,(,_),(0,id,i),(20,>,_),(1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
R9: E --> num 
---------------------step5---------------------------
state stack: { 0,4,42,64 }
string stack: { $,id,=,E }
input token: (15,;,_),(0,id,j),(16,=,_),(1,num,4),(15,;,_),(0,id,k),(16,=,_),(1,num,5),(15,;,_),(0,id,q),(16,=,_),(1,num,0),(15,;,_),(7,while,_),(9,(,_),(0,id,i),(21,<,_),(1,num,10),(10,),_),(8,do,_),(30,{,_),(5,if,_),(9,(,_),(9,(,_),(0,id,i),(20,>,_),(1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step6---------------------------
state stack: { 0,4,42,64,67 }
string stack: { $,id,=,E,; }
input token: (0,id,j),(16,=,_),(1,num,4),(15,;,_),(0,id,k),(16,=,_),(1,num,5),(15,;,_),(0,id,q),(16,=,_),(1,num,0),(15,;,_),(7,while,_),(9,(,_),(0,id,i),(21,<,_),(1,num,10),(10,),_),(8,do,_),(30,{,_),(5,if,_),(9,(,_),(9,(,_),(0,id,i),(20,>,_),(1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step7---------------------------
state stack: { 0,4,42,64,67 }
string stack: { $,id,=,E,; }
input token: (0,id,j),(16,=,_),(1,num,4),(15,;,_),(0,id,k),(16,=,_),(1,num,5),(15,;,_),(0,id,q),(16,=,_),(1,num,0),(15,;,_),(7,while,_),(9,(,_),(0,id,i),(21,<,_),(1,num,10),(10,),_),(8,do,_),(30,{,_),(5,if,_),(9,(,_),(9,(,_),(0,id,i),(20,>,_),(1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
R16: S --> id = E ; 
---------------------step8---------------------------
state stack: { 0,6 }
string stack: { $,S }
input token: (0,id,j),(16,=,_),(1,num,4),(15,;,_),(0,id,k),(16,=,_),(1,num,5),(15,;,_),(0,id,q),(16,=,_),(1,num,0),(15,;,_),(7,while,_),(9,(,_),(0,id,i),(21,<,_),(1,num,10),(10,),_),(8,do,_),(30,{,_),(5,if,_),(9,(,_),(9,(,_),(0,id,i),(20,>,_),(1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step9---------------------------
state stack: { 0,6,4 }
string stack: { $,S,id }
input token: (16,=,_),(1,num,4),(15,;,_),(0,id,k),(16,=,_),(1,num,5),(15,;,_),(0,id,q),(16,=,_),(1,num,0),(15,;,_),(7,while,_),(9,(,_),(0,id,i),(21,<,_),(1,num,10),(10,),_),(8,do,_),(30,{,_),(5,if,_),(9,(,_),(9,(,_),(0,id,i),(20,>,_),(1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step10---------------------------
state stack: { 0,6,4,42 }
string stack: { $,S,id,= }
input token: (1,num,4),(15,;,_),(0,id,k),(16,=,_),(1,num,5),(15,;,_),(0,id,q),(16,=,_),(1,num,0),(15,;,_),(7,while,_),(9,(,_),(0,id,i),(21,<,_),(1,num,10),(10,),_),(8,do,_),(30,{,_),(5,if,_),(9,(,_),(9,(,_),(0,id,i),(20,>,_),(1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step11---------------------------
state stack: { 0,6,4,42,56 }
string stack: { $,S,id,=,num }
input token: (15,;,_),(0,id,k),(16,=,_),(1,num,5),(15,;,_),(0,id,q),(16,=,_),(1,num,0),(15,;,_),(7,while,_),(9,(,_),(0,id,i),(21,<,_),(1,num,10),(10,),_),(8,do,_),(30,{,_),(5,if,_),(9,(,_),(9,(,_),(0,id,i),(20,>,_),(1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step12---------------------------
state stack: { 0,6,4,42,56 }
string stack: { $,S,id,=,num }
input token: (15,;,_),(0,id,k),(16,=,_),(1,num,5),(15,;,_),(0,id,q),(16,=,_),(1,num,0),(15,;,_),(7,while,_),(9,(,_),(0,id,i),(21,<,_),(1,num,10),(10,),_),(8,do,_),(30,{,_),(5,if,_),(9,(,_),(9,(,_),(0,id,i),(20,>,_),(1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
R9: E --> num 
---------------------step13---------------------------
state stack: { 0,6,4,42,64 }
string stack: { $,S,id,=,E }
input token: (15,;,_),(0,id,k),(16,=,_),(1,num,5),(15,;,_),(0,id,q),(16,=,_),(1,num,0),(15,;,_),(7,while,_),(9,(,_),(0,id,i),(21,<,_),(1,num,10),(10,),_),(8,do,_),(30,{,_),(5,if,_),(9,(,_),(9,(,_),(0,id,i),(20,>,_),(1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step14---------------------------
state stack: { 0,6,4,42,64,67 }
string stack: { $,S,id,=,E,; }
input token: (0,id,k),(16,=,_),(1,num,5),(15,;,_),(0,id,q),(16,=,_),(1,num,0),(15,;,_),(7,while,_),(9,(,_),(0,id,i),(21,<,_),(1,num,10),(10,),_),(8,do,_),(30,{,_),(5,if,_),(9,(,_),(9,(,_),(0,id,i),(20,>,_),(1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step15---------------------------
state stack: { 0,6,4,42,64,67 }
string stack: { $,S,id,=,E,; }
input token: (0,id,k),(16,=,_),(1,num,5),(15,;,_),(0,id,q),(16,=,_),(1,num,0),(15,;,_),(7,while,_),(9,(,_),(0,id,i),(21,<,_),(1,num,10),(10,),_),(8,do,_),(30,{,_),(5,if,_),(9,(,_),(9,(,_),(0,id,i),(20,>,_),(1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
R16: S --> id = E ; 
---------------------step16---------------------------
state stack: { 0,6,47 }
string stack: { $,S,S }
input token: (0,id,k),(16,=,_),(1,num,5),(15,;,_),(0,id,q),(16,=,_),(1,num,0),(15,;,_),(7,while,_),(9,(,_),(0,id,i),(21,<,_),(1,num,10),(10,),_),(8,do,_),(30,{,_),(5,if,_),(9,(,_),(9,(,_),(0,id,i),(20,>,_),(1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step17---------------------------
state stack: { 0,6,47 }
string stack: { $,S,S }
input token: (0,id,k),(16,=,_),(1,num,5),(15,;,_),(0,id,q),(16,=,_),(1,num,0),(15,;,_),(7,while,_),(9,(,_),(0,id,i),(21,<,_),(1,num,10),(10,),_),(8,do,_),(30,{,_),(5,if,_),(9,(,_),(9,(,_),(0,id,i),(20,>,_),(1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
R17: S --> S S 
---------------------step18---------------------------
state stack: { 0,6 }
string stack: { $,S }
input token: (0,id,k),(16,=,_),(1,num,5),(15,;,_),(0,id,q),(16,=,_),(1,num,0),(15,;,_),(7,while,_),(9,(,_),(0,id,i),(21,<,_),(1,num,10),(10,),_),(8,do,_),(30,{,_),(5,if,_),(9,(,_),(9,(,_),(0,id,i),(20,>,_),(1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step19---------------------------
state stack: { 0,6,4 }
string stack: { $,S,id }
input token: (16,=,_),(1,num,5),(15,;,_),(0,id,q),(16,=,_),(1,num,0),(15,;,_),(7,while,_),(9,(,_),(0,id,i),(21,<,_),(1,num,10),(10,),_),(8,do,_),(30,{,_),(5,if,_),(9,(,_),(9,(,_),(0,id,i),(20,>,_),(1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step20---------------------------
state stack: { 0,6,4,42 }
string stack: { $,S,id,= }
input token: (1,num,5),(15,;,_),(0,id,q),(16,=,_),(1,num,0),(15,;,_),(7,while,_),(9,(,_),(0,id,i),(21,<,_),(1,num,10),(10,),_),(8,do,_),(30,{,_),(5,if,_),(9,(,_),(9,(,_),(0,id,i),(20,>,_),(1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step21---------------------------
state stack: { 0,6,4,42,56 }
string stack: { $,S,id,=,num }
input token: (15,;,_),(0,id,q),(16,=,_),(1,num,0),(15,;,_),(7,while,_),(9,(,_),(0,id,i),(21,<,_),(1,num,10),(10,),_),(8,do,_),(30,{,_),(5,if,_),(9,(,_),(9,(,_),(0,id,i),(20,>,_),(1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step22---------------------------
state stack: { 0,6,4,42,56 }
string stack: { $,S,id,=,num }
input token: (15,;,_),(0,id,q),(16,=,_),(1,num,0),(15,;,_),(7,while,_),(9,(,_),(0,id,i),(21,<,_),(1,num,10),(10,),_),(8,do,_),(30,{,_),(5,if,_),(9,(,_),(9,(,_),(0,id,i),(20,>,_),(1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
R9: E --> num 
---------------------step23---------------------------
state stack: { 0,6,4,42,64 }
string stack: { $,S,id,=,E }
input token: (15,;,_),(0,id,q),(16,=,_),(1,num,0),(15,;,_),(7,while,_),(9,(,_),(0,id,i),(21,<,_),(1,num,10),(10,),_),(8,do,_),(30,{,_),(5,if,_),(9,(,_),(9,(,_),(0,id,i),(20,>,_),(1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step24---------------------------
state stack: { 0,6,4,42,64,67 }
string stack: { $,S,id,=,E,; }
input token: (0,id,q),(16,=,_),(1,num,0),(15,;,_),(7,while,_),(9,(,_),(0,id,i),(21,<,_),(1,num,10),(10,),_),(8,do,_),(30,{,_),(5,if,_),(9,(,_),(9,(,_),(0,id,i),(20,>,_),(1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step25---------------------------
state stack: { 0,6,4,42,64,67 }
string stack: { $,S,id,=,E,; }
input token: (0,id,q),(16,=,_),(1,num,0),(15,;,_),(7,while,_),(9,(,_),(0,id,i),(21,<,_),(1,num,10),(10,),_),(8,do,_),(30,{,_),(5,if,_),(9,(,_),(9,(,_),(0,id,i),(20,>,_),(1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
R16: S --> id = E ; 
---------------------step26---------------------------
state stack: { 0,6,47 }
string stack: { $,S,S }
input token: (0,id,q),(16,=,_),(1,num,0),(15,;,_),(7,while,_),(9,(,_),(0,id,i),(21,<,_),(1,num,10),(10,),_),(8,do,_),(30,{,_),(5,if,_),(9,(,_),(9,(,_),(0,id,i),(20,>,_),(1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step27---------------------------
state stack: { 0,6,47 }
string stack: { $,S,S }
input token: (0,id,q),(16,=,_),(1,num,0),(15,;,_),(7,while,_),(9,(,_),(0,id,i),(21,<,_),(1,num,10),(10,),_),(8,do,_),(30,{,_),(5,if,_),(9,(,_),(9,(,_),(0,id,i),(20,>,_),(1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
R17: S --> S S 
---------------------step28---------------------------
state stack: { 0,6 }
string stack: { $,S }
input token: (0,id,q),(16,=,_),(1,num,0),(15,;,_),(7,while,_),(9,(,_),(0,id,i),(21,<,_),(1,num,10),(10,),_),(8,do,_),(30,{,_),(5,if,_),(9,(,_),(9,(,_),(0,id,i),(20,>,_),(1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step29---------------------------
state stack: { 0,6,4 }
string stack: { $,S,id }
input token: (16,=,_),(1,num,0),(15,;,_),(7,while,_),(9,(,_),(0,id,i),(21,<,_),(1,num,10),(10,),_),(8,do,_),(30,{,_),(5,if,_),(9,(,_),(9,(,_),(0,id,i),(20,>,_),(1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step30---------------------------
state stack: { 0,6,4,42 }
string stack: { $,S,id,= }
input token: (1,num,0),(15,;,_),(7,while,_),(9,(,_),(0,id,i),(21,<,_),(1,num,10),(10,),_),(8,do,_),(30,{,_),(5,if,_),(9,(,_),(9,(,_),(0,id,i),(20,>,_),(1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step31---------------------------
state stack: { 0,6,4,42,56 }
string stack: { $,S,id,=,num }
input token: (15,;,_),(7,while,_),(9,(,_),(0,id,i),(21,<,_),(1,num,10),(10,),_),(8,do,_),(30,{,_),(5,if,_),(9,(,_),(9,(,_),(0,id,i),(20,>,_),(1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step32---------------------------
state stack: { 0,6,4,42,56 }
string stack: { $,S,id,=,num }
input token: (15,;,_),(7,while,_),(9,(,_),(0,id,i),(21,<,_),(1,num,10),(10,),_),(8,do,_),(30,{,_),(5,if,_),(9,(,_),(9,(,_),(0,id,i),(20,>,_),(1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
R9: E --> num 
---------------------step33---------------------------
state stack: { 0,6,4,42,64 }
string stack: { $,S,id,=,E }
input token: (15,;,_),(7,while,_),(9,(,_),(0,id,i),(21,<,_),(1,num,10),(10,),_),(8,do,_),(30,{,_),(5,if,_),(9,(,_),(9,(,_),(0,id,i),(20,>,_),(1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step34---------------------------
state stack: { 0,6,4,42,64,67 }
string stack: { $,S,id,=,E,; }
input token: (7,while,_),(9,(,_),(0,id,i),(21,<,_),(1,num,10),(10,),_),(8,do,_),(30,{,_),(5,if,_),(9,(,_),(9,(,_),(0,id,i),(20,>,_),(1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step35---------------------------
state stack: { 0,6,4,42,64,67 }
string stack: { $,S,id,=,E,; }
input token: (7,while,_),(9,(,_),(0,id,i),(21,<,_),(1,num,10),(10,),_),(8,do,_),(30,{,_),(5,if,_),(9,(,_),(9,(,_),(0,id,i),(20,>,_),(1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
R16: S --> id = E ; 
---------------------step36---------------------------
state stack: { 0,6,47 }
string stack: { $,S,S }
input token: (7,while,_),(9,(,_),(0,id,i),(21,<,_),(1,num,10),(10,),_),(8,do,_),(30,{,_),(5,if,_),(9,(,_),(9,(,_),(0,id,i),(20,>,_),(1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step37---------------------------
state stack: { 0,6,47 }
string stack: { $,S,S }
input token: (7,while,_),(9,(,_),(0,id,i),(21,<,_),(1,num,10),(10,),_),(8,do,_),(30,{,_),(5,if,_),(9,(,_),(9,(,_),(0,id,i),(20,>,_),(1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
R17: S --> S S 
---------------------step38---------------------------
state stack: { 0,6 }
string stack: { $,S }
input token: (7,while,_),(9,(,_),(0,id,i),(21,<,_),(1,num,10),(10,),_),(8,do,_),(30,{,_),(5,if,_),(9,(,_),(9,(,_),(0,id,i),(20,>,_),(1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step39---------------------------
state stack: { 0,6,1 }
string stack: { $,S,while }
input token: (9,(,_),(0,id,i),(21,<,_),(1,num,10),(10,),_),(8,do,_),(30,{,_),(5,if,_),(9,(,_),(9,(,_),(0,id,i),(20,>,_),(1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step40---------------------------
state stack: { 0,6,1,46 }
string stack: { $,S,while,( }
input token: (0,id,i),(21,<,_),(1,num,10),(10,),_),(8,do,_),(30,{,_),(5,if,_),(9,(,_),(9,(,_),(0,id,i),(20,>,_),(1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step41---------------------------
state stack: { 0,6,1,46,10 }
string stack: { $,S,while,(,id }
input token: (21,<,_),(1,num,10),(10,),_),(8,do,_),(30,{,_),(5,if,_),(9,(,_),(9,(,_),(0,id,i),(20,>,_),(1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step42---------------------------
state stack: { 0,6,1,46,10 }
string stack: { $,S,while,(,id }
input token: (21,<,_),(1,num,10),(10,),_),(8,do,_),(30,{,_),(5,if,_),(9,(,_),(9,(,_),(0,id,i),(20,>,_),(1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
R6: E --> id 
---------------------step43---------------------------
state stack: { 0,6,1,46,55 }
string stack: { $,S,while,(,E }
input token: (21,<,_),(1,num,10),(10,),_),(8,do,_),(30,{,_),(5,if,_),(9,(,_),(9,(,_),(0,id,i),(20,>,_),(1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step44---------------------------
state stack: { 0,6,1,46,55,28 }
string stack: { $,S,while,(,E,< }
input token: (1,num,10),(10,),_),(8,do,_),(30,{,_),(5,if,_),(9,(,_),(9,(,_),(0,id,i),(20,>,_),(1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step45---------------------------
state stack: { 0,6,1,46,55,28 }
string stack: { $,S,while,(,E,< }
input token: (1,num,10),(10,),_),(8,do,_),(30,{,_),(5,if,_),(9,(,_),(9,(,_),(0,id,i),(20,>,_),(1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
R26: rop --> < 
---------------------step46---------------------------
state stack: { 0,6,1,46,55,21 }
string stack: { $,S,while,(,E,rop }
input token: (1,num,10),(10,),_),(8,do,_),(30,{,_),(5,if,_),(9,(,_),(9,(,_),(0,id,i),(20,>,_),(1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step47---------------------------
state stack: { 0,6,1,46,55,21,12 }
string stack: { $,S,while,(,E,rop,num }
input token: (10,),_),(8,do,_),(30,{,_),(5,if,_),(9,(,_),(9,(,_),(0,id,i),(20,>,_),(1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step48---------------------------
state stack: { 0,6,1,46,55,21,12 }
string stack: { $,S,while,(,E,rop,num }
input token: (10,),_),(8,do,_),(30,{,_),(5,if,_),(9,(,_),(9,(,_),(0,id,i),(20,>,_),(1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
R9: E --> num 
---------------------step49---------------------------
state stack: { 0,6,1,46,55,21,36 }
string stack: { $,S,while,(,E,rop,E }
input token: (10,),_),(8,do,_),(30,{,_),(5,if,_),(9,(,_),(9,(,_),(0,id,i),(20,>,_),(1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step50---------------------------
state stack: { 0,6,1,46,55,21,36 }
string stack: { $,S,while,(,E,rop,E }
input token: (10,),_),(8,do,_),(30,{,_),(5,if,_),(9,(,_),(9,(,_),(0,id,i),(20,>,_),(1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
R5: E --> E rop E 
---------------------step51---------------------------
state stack: { 0,6,1,46,55 }
string stack: { $,S,while,(,E }
input token: (10,),_),(8,do,_),(30,{,_),(5,if,_),(9,(,_),(9,(,_),(0,id,i),(20,>,_),(1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step52---------------------------
state stack: { 0,6,1,46,55,65 }
string stack: { $,S,while,(,E,) }
input token: (8,do,_),(30,{,_),(5,if,_),(9,(,_),(9,(,_),(0,id,i),(20,>,_),(1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step53---------------------------
state stack: { 0,6,1,46,55,65,76 }
string stack: { $,S,while,(,E,),do }
input token: (30,{,_),(5,if,_),(9,(,_),(9,(,_),(0,id,i),(20,>,_),(1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step54---------------------------
state stack: { 0,6,1,46,55,65,76 }
string stack: { $,S,while,(,E,),do }
input token: (30,{,_),(5,if,_),(9,(,_),(9,(,_),(0,id,i),(20,>,_),(1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
R23: WD --> while ( E ) do 
---------------------step55---------------------------
state stack: { 0,6,2 }
string stack: { $,S,WD }
input token: (30,{,_),(5,if,_),(9,(,_),(9,(,_),(0,id,i),(20,>,_),(1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step56---------------------------
state stack: { 0,6,2,45 }
string stack: { $,S,WD,{ }
input token: (5,if,_),(9,(,_),(9,(,_),(0,id,i),(20,>,_),(1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step57---------------------------
state stack: { 0,6,2,45,3 }
string stack: { $,S,WD,{,if }
input token: (9,(,_),(9,(,_),(0,id,i),(20,>,_),(1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step58---------------------------
state stack: { 0,6,2,45,3,8 }
string stack: { $,S,WD,{,if,( }
input token: (9,(,_),(0,id,i),(20,>,_),(1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step59---------------------------
state stack: { 0,6,2,45,3,8,17 }
string stack: { $,S,WD,{,if,(,( }
input token: (0,id,i),(20,>,_),(1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step60---------------------------
state stack: { 0,6,2,45,3,8,17,10 }
string stack: { $,S,WD,{,if,(,(,id }
input token: (20,>,_),(1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step61---------------------------
state stack: { 0,6,2,45,3,8,17,10 }
string stack: { $,S,WD,{,if,(,(,id }
input token: (20,>,_),(1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
R6: E --> id 
---------------------step62---------------------------
state stack: { 0,6,2,45,3,8,17,35 }
string stack: { $,S,WD,{,if,(,(,E }
input token: (20,>,_),(1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step63---------------------------
state stack: { 0,6,2,45,3,8,17,35,26 }
string stack: { $,S,WD,{,if,(,(,E,> }
input token: (1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step64---------------------------
state stack: { 0,6,2,45,3,8,17,35,26 }
string stack: { $,S,WD,{,if,(,(,E,> }
input token: (1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
R24: rop --> > 
---------------------step65---------------------------
state stack: { 0,6,2,45,3,8,17,35,21 }
string stack: { $,S,WD,{,if,(,(,E,rop }
input token: (1,num,5),(10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step66---------------------------
state stack: { 0,6,2,45,3,8,17,35,21,12 }
string stack: { $,S,WD,{,if,(,(,E,rop,num }
input token: (10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step67---------------------------
state stack: { 0,6,2,45,3,8,17,35,21,12 }
string stack: { $,S,WD,{,if,(,(,E,rop,num }
input token: (10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
R9: E --> num 
---------------------step68---------------------------
state stack: { 0,6,2,45,3,8,17,35,21,36 }
string stack: { $,S,WD,{,if,(,(,E,rop,E }
input token: (10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step69---------------------------
state stack: { 0,6,2,45,3,8,17,35,21,36 }
string stack: { $,S,WD,{,if,(,(,E,rop,E }
input token: (10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
R5: E --> E rop E 
---------------------step70---------------------------
state stack: { 0,6,2,45,3,8,17,35 }
string stack: { $,S,WD,{,if,(,(,E }
input token: (10,),_),(17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step71---------------------------
state stack: { 0,6,2,45,3,8,17,35,41 }
string stack: { $,S,WD,{,if,(,(,E,) }
input token: (17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step72---------------------------
state stack: { 0,6,2,45,3,8,17,35,41 }
string stack: { $,S,WD,{,if,(,(,E,) }
input token: (17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
R4: E --> ( E ) 
---------------------step73---------------------------
state stack: { 0,6,2,45,3,8,11 }
string stack: { $,S,WD,{,if,(,E }
input token: (17,and,_),(9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step74---------------------------
state stack: { 0,6,2,45,3,8,11,24 }
string stack: { $,S,WD,{,if,(,E,and }
input token: (9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step75---------------------------
state stack: { 0,6,2,45,3,8,11,24 }
string stack: { $,S,WD,{,if,(,E,and }
input token: (9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
R14: EA --> E and 
---------------------step76---------------------------
state stack: { 0,6,2,45,3,8,13 }
string stack: { $,S,WD,{,if,(,EA }
input token: (9,(,_),(0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step77---------------------------
state stack: { 0,6,2,45,3,8,13,17 }
string stack: { $,S,WD,{,if,(,EA,( }
input token: (0,id,k),(20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step78---------------------------
state stack: { 0,6,2,45,3,8,13,17,10 }
string stack: { $,S,WD,{,if,(,EA,(,id }
input token: (20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step79---------------------------
state stack: { 0,6,2,45,3,8,13,17,10 }
string stack: { $,S,WD,{,if,(,EA,(,id }
input token: (20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
R6: E --> id 
---------------------step80---------------------------
state stack: { 0,6,2,45,3,8,13,17,35 }
string stack: { $,S,WD,{,if,(,EA,(,E }
input token: (20,>,_),(0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step81---------------------------
state stack: { 0,6,2,45,3,8,13,17,35,26 }
string stack: { $,S,WD,{,if,(,EA,(,E,> }
input token: (0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step82---------------------------
state stack: { 0,6,2,45,3,8,13,17,35,26 }
string stack: { $,S,WD,{,if,(,EA,(,E,> }
input token: (0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
R24: rop --> > 
---------------------step83---------------------------
state stack: { 0,6,2,45,3,8,13,17,35,21 }
string stack: { $,S,WD,{,if,(,EA,(,E,rop }
input token: (0,id,j),(10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step84---------------------------
state stack: { 0,6,2,45,3,8,13,17,35,21,10 }
string stack: { $,S,WD,{,if,(,EA,(,E,rop,id }
input token: (10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step85---------------------------
state stack: { 0,6,2,45,3,8,13,17,35,21,10 }
string stack: { $,S,WD,{,if,(,EA,(,E,rop,id }
input token: (10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
R6: E --> id 
---------------------step86---------------------------
state stack: { 0,6,2,45,3,8,13,17,35,21,36 }
string stack: { $,S,WD,{,if,(,EA,(,E,rop,E }
input token: (10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step87---------------------------
state stack: { 0,6,2,45,3,8,13,17,35,21,36 }
string stack: { $,S,WD,{,if,(,EA,(,E,rop,E }
input token: (10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
R5: E --> E rop E 
---------------------step88---------------------------
state stack: { 0,6,2,45,3,8,13,17,35 }
string stack: { $,S,WD,{,if,(,EA,(,E }
input token: (10,),_),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step89---------------------------
state stack: { 0,6,2,45,3,8,13,17,35,41 }
string stack: { $,S,WD,{,if,(,EA,(,E,) }
input token: (10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step90---------------------------
state stack: { 0,6,2,45,3,8,13,17,35,41 }
string stack: { $,S,WD,{,if,(,EA,(,E,) }
input token: (10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
R4: E --> ( E ) 
---------------------step91---------------------------
state stack: { 0,6,2,45,3,8,13,32 }
string stack: { $,S,WD,{,if,(,EA,E }
input token: (10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step92---------------------------
state stack: { 0,6,2,45,3,8,13,32 }
string stack: { $,S,WD,{,if,(,EA,E }
input token: (10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
R1: E --> EA E 
---------------------step93---------------------------
state stack: { 0,6,2,45,3,8,11 }
string stack: { $,S,WD,{,if,(,E }
input token: (10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step94---------------------------
state stack: { 0,6,2,45,3,8,11,18 }
string stack: { $,S,WD,{,if,(,E,) }
input token: (29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step95---------------------------
state stack: { 0,6,2,45,3,8,11,18,31 }
string stack: { $,S,WD,{,if,(,E,),then }
input token: (30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step96---------------------------
state stack: { 0,6,2,45,3,8,11,18,31 }
string stack: { $,S,WD,{,if,(,E,),then }
input token: (30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
R0: C --> if ( E ) then 
---------------------step97---------------------------
state stack: { 0,6,2,45,50 }
string stack: { $,S,WD,{,C }
input token: (30,{,_),(0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step98---------------------------
state stack: { 0,6,2,45,50,74 }
string stack: { $,S,WD,{,C,{ }
input token: (0,id,k),(16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step99---------------------------
state stack: { 0,6,2,45,50,74,49 }
string stack: { $,S,WD,{,C,{,id }
input token: (16,=,_),(0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step100---------------------------
state stack: { 0,6,2,45,50,74,49,72 }
string stack: { $,S,WD,{,C,{,id,= }
input token: (0,id,k),(12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step101---------------------------
state stack: { 0,6,2,45,50,74,49,72,63 }
string stack: { $,S,WD,{,C,{,id,=,id }
input token: (12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step102---------------------------
state stack: { 0,6,2,45,50,74,49,72,63 }
string stack: { $,S,WD,{,C,{,id,=,id }
input token: (12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
R6: E --> id 
---------------------step103---------------------------
state stack: { 0,6,2,45,50,74,49,72,93 }
string stack: { $,S,WD,{,C,{,id,=,E }
input token: (12,-,_),(1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step104---------------------------
state stack: { 0,6,2,45,50,74,49,72,93,69 }
string stack: { $,S,WD,{,C,{,id,=,E,- }
input token: (1,num,1),(15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step105---------------------------
state stack: { 0,6,2,45,50,74,49,72,93,69,56 }
string stack: { $,S,WD,{,C,{,id,=,E,-,num }
input token: (15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step106---------------------------
state stack: { 0,6,2,45,50,74,49,72,93,69,56 }
string stack: { $,S,WD,{,C,{,id,=,E,-,num }
input token: (15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
R9: E --> num 
---------------------step107---------------------------
state stack: { 0,6,2,45,50,74,49,72,93,69,90 }
string stack: { $,S,WD,{,C,{,id,=,E,-,E }
input token: (15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step108---------------------------
state stack: { 0,6,2,45,50,74,49,72,93,69,90 }
string stack: { $,S,WD,{,C,{,id,=,E,-,E }
input token: (15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
R11: E --> E - E 
---------------------step109---------------------------
state stack: { 0,6,2,45,50,74,49,72,93 }
string stack: { $,S,WD,{,C,{,id,=,E }
input token: (15,;,_),(31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step110---------------------------
state stack: { 0,6,2,45,50,74,49,72,93,95 }
string stack: { $,S,WD,{,C,{,id,=,E,; }
input token: (31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step111---------------------------
state stack: { 0,6,2,45,50,74,49,72,93,95 }
string stack: { $,S,WD,{,C,{,id,=,E,; }
input token: (31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
R16: S --> id = E ; 
---------------------step112---------------------------
state stack: { 0,6,2,45,50,74,82 }
string stack: { $,S,WD,{,C,{,S }
input token: (31,},_),(6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step113---------------------------
state stack: { 0,6,2,45,50,74,82,98 }
string stack: { $,S,WD,{,C,{,S,} }
input token: (6,else,_),(30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step114---------------------------
state stack: { 0,6,2,45,50,74,82,98,96 }
string stack: { $,S,WD,{,C,{,S,},else }
input token: (30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step115---------------------------
state stack: { 0,6,2,45,50,74,82,98,96 }
string stack: { $,S,WD,{,C,{,S,},else }
input token: (30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
R22: T --> C { S } else 
---------------------step116---------------------------
state stack: { 0,6,2,45,52 }
string stack: { $,S,WD,{,T }
input token: (30,{,_),(0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step117---------------------------
state stack: { 0,6,2,45,52,73 }
string stack: { $,S,WD,{,T,{ }
input token: (0,id,k),(16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step118---------------------------
state stack: { 0,6,2,45,52,73,49 }
string stack: { $,S,WD,{,T,{,id }
input token: (16,=,_),(0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step119---------------------------
state stack: { 0,6,2,45,52,73,49,72 }
string stack: { $,S,WD,{,T,{,id,= }
input token: (0,id,k),(11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step120---------------------------
state stack: { 0,6,2,45,52,73,49,72,63 }
string stack: { $,S,WD,{,T,{,id,=,id }
input token: (11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step121---------------------------
state stack: { 0,6,2,45,52,73,49,72,63 }
string stack: { $,S,WD,{,T,{,id,=,id }
input token: (11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
R6: E --> id 
---------------------step122---------------------------
state stack: { 0,6,2,45,52,73,49,72,93 }
string stack: { $,S,WD,{,T,{,id,=,E }
input token: (11,+,_),(1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step123---------------------------
state stack: { 0,6,2,45,52,73,49,72,93,68 }
string stack: { $,S,WD,{,T,{,id,=,E,+ }
input token: (1,num,1),(15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step124---------------------------
state stack: { 0,6,2,45,52,73,49,72,93,68,56 }
string stack: { $,S,WD,{,T,{,id,=,E,+,num }
input token: (15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step125---------------------------
state stack: { 0,6,2,45,52,73,49,72,93,68,56 }
string stack: { $,S,WD,{,T,{,id,=,E,+,num }
input token: (15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
R9: E --> num 
---------------------step126---------------------------
state stack: { 0,6,2,45,52,73,49,72,93,68,89 }
string stack: { $,S,WD,{,T,{,id,=,E,+,E }
input token: (15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step127---------------------------
state stack: { 0,6,2,45,52,73,49,72,93,68,89 }
string stack: { $,S,WD,{,T,{,id,=,E,+,E }
input token: (15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
R10: E --> E + E 
---------------------step128---------------------------
state stack: { 0,6,2,45,52,73,49,72,93 }
string stack: { $,S,WD,{,T,{,id,=,E }
input token: (15,;,_),(31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step129---------------------------
state stack: { 0,6,2,45,52,73,49,72,93,95 }
string stack: { $,S,WD,{,T,{,id,=,E,; }
input token: (31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step130---------------------------
state stack: { 0,6,2,45,52,73,49,72,93,95 }
string stack: { $,S,WD,{,T,{,id,=,E,; }
input token: (31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
R16: S --> id = E ; 
---------------------step131---------------------------
state stack: { 0,6,2,45,52,73,81 }
string stack: { $,S,WD,{,T,{,S }
input token: (31,},_),(5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step132---------------------------
state stack: { 0,6,2,45,52,73,81,97 }
string stack: { $,S,WD,{,T,{,S,} }
input token: (5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step133---------------------------
state stack: { 0,6,2,45,52,73,81,97 }
string stack: { $,S,WD,{,T,{,S,} }
input token: (5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
R18: S --> T { S } 
---------------------step134---------------------------
state stack: { 0,6,2,45,54 }
string stack: { $,S,WD,{,S }
input token: (5,if,_),(9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step135---------------------------
state stack: { 0,6,2,45,54,3 }
string stack: { $,S,WD,{,S,if }
input token: (9,(,_),(0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step136---------------------------
state stack: { 0,6,2,45,54,3,8 }
string stack: { $,S,WD,{,S,if,( }
input token: (0,id,k),(24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step137---------------------------
state stack: { 0,6,2,45,54,3,8,10 }
string stack: { $,S,WD,{,S,if,(,id }
input token: (24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step138---------------------------
state stack: { 0,6,2,45,54,3,8,10 }
string stack: { $,S,WD,{,S,if,(,id }
input token: (24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
R6: E --> id 
---------------------step139---------------------------
state stack: { 0,6,2,45,54,3,8,11 }
string stack: { $,S,WD,{,S,if,(,E }
input token: (24,==,_),(0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step140---------------------------
state stack: { 0,6,2,45,54,3,8,11,29 }
string stack: { $,S,WD,{,S,if,(,E,== }
input token: (0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step141---------------------------
state stack: { 0,6,2,45,54,3,8,11,29 }
string stack: { $,S,WD,{,S,if,(,E,== }
input token: (0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
R27: rop --> == 
---------------------step142---------------------------
state stack: { 0,6,2,45,54,3,8,11,21 }
string stack: { $,S,WD,{,S,if,(,E,rop }
input token: (0,id,i),(10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step143---------------------------
state stack: { 0,6,2,45,54,3,8,11,21,10 }
string stack: { $,S,WD,{,S,if,(,E,rop,id }
input token: (10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step144---------------------------
state stack: { 0,6,2,45,54,3,8,11,21,10 }
string stack: { $,S,WD,{,S,if,(,E,rop,id }
input token: (10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
R6: E --> id 
---------------------step145---------------------------
state stack: { 0,6,2,45,54,3,8,11,21,36 }
string stack: { $,S,WD,{,S,if,(,E,rop,E }
input token: (10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step146---------------------------
state stack: { 0,6,2,45,54,3,8,11,21,36 }
string stack: { $,S,WD,{,S,if,(,E,rop,E }
input token: (10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
R5: E --> E rop E 
---------------------step147---------------------------
state stack: { 0,6,2,45,54,3,8,11 }
string stack: { $,S,WD,{,S,if,(,E }
input token: (10,),_),(29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step148---------------------------
state stack: { 0,6,2,45,54,3,8,11,18 }
string stack: { $,S,WD,{,S,if,(,E,) }
input token: (29,then,_),(30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step149---------------------------
state stack: { 0,6,2,45,54,3,8,11,18,31 }
string stack: { $,S,WD,{,S,if,(,E,),then }
input token: (30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step150---------------------------
state stack: { 0,6,2,45,54,3,8,11,18,31 }
string stack: { $,S,WD,{,S,if,(,E,),then }
input token: (30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
R0: C --> if ( E ) then 
---------------------step151---------------------------
state stack: { 0,6,2,45,54,50 }
string stack: { $,S,WD,{,S,C }
input token: (30,{,_),(0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step152---------------------------
state stack: { 0,6,2,45,54,50,74 }
string stack: { $,S,WD,{,S,C,{ }
input token: (0,id,k),(16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step153---------------------------
state stack: { 0,6,2,45,54,50,74,49 }
string stack: { $,S,WD,{,S,C,{,id }
input token: (16,=,_),(0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step154---------------------------
state stack: { 0,6,2,45,54,50,74,49,72 }
string stack: { $,S,WD,{,S,C,{,id,= }
input token: (0,id,j),(15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step155---------------------------
state stack: { 0,6,2,45,54,50,74,49,72,63 }
string stack: { $,S,WD,{,S,C,{,id,=,id }
input token: (15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step156---------------------------
state stack: { 0,6,2,45,54,50,74,49,72,63 }
string stack: { $,S,WD,{,S,C,{,id,=,id }
input token: (15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
R6: E --> id 
---------------------step157---------------------------
state stack: { 0,6,2,45,54,50,74,49,72,93 }
string stack: { $,S,WD,{,S,C,{,id,=,E }
input token: (15,;,_),(31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step158---------------------------
state stack: { 0,6,2,45,54,50,74,49,72,93,95 }
string stack: { $,S,WD,{,S,C,{,id,=,E,; }
input token: (31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step159---------------------------
state stack: { 0,6,2,45,54,50,74,49,72,93,95 }
string stack: { $,S,WD,{,S,C,{,id,=,E,; }
input token: (31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
R16: S --> id = E ; 
---------------------step160---------------------------
state stack: { 0,6,2,45,54,50,74,82 }
string stack: { $,S,WD,{,S,C,{,S }
input token: (31,},_),(0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step161---------------------------
state stack: { 0,6,2,45,54,50,74,82,98 }
string stack: { $,S,WD,{,S,C,{,S,} }
input token: (0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step162---------------------------
state stack: { 0,6,2,45,54,50,74,82,98 }
string stack: { $,S,WD,{,S,C,{,S,} }
input token: (0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
R19: S --> C { S } 
---------------------step163---------------------------
state stack: { 0,6,2,45,54,78 }
string stack: { $,S,WD,{,S,S }
input token: (0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step164---------------------------
state stack: { 0,6,2,45,54,78 }
string stack: { $,S,WD,{,S,S }
input token: (0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
R17: S --> S S 
---------------------step165---------------------------
state stack: { 0,6,2,45,54 }
string stack: { $,S,WD,{,S }
input token: (0,id,i),(16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step166---------------------------
state stack: { 0,6,2,45,54,49 }
string stack: { $,S,WD,{,S,id }
input token: (16,=,_),(0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step167---------------------------
state stack: { 0,6,2,45,54,49,72 }
string stack: { $,S,WD,{,S,id,= }
input token: (0,id,i),(11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step168---------------------------
state stack: { 0,6,2,45,54,49,72,63 }
string stack: { $,S,WD,{,S,id,=,id }
input token: (11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step169---------------------------
state stack: { 0,6,2,45,54,49,72,63 }
string stack: { $,S,WD,{,S,id,=,id }
input token: (11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
R6: E --> id 
---------------------step170---------------------------
state stack: { 0,6,2,45,54,49,72,93 }
string stack: { $,S,WD,{,S,id,=,E }
input token: (11,+,_),(1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step171---------------------------
state stack: { 0,6,2,45,54,49,72,93,68 }
string stack: { $,S,WD,{,S,id,=,E,+ }
input token: (1,num,1),(15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step172---------------------------
state stack: { 0,6,2,45,54,49,72,93,68,56 }
string stack: { $,S,WD,{,S,id,=,E,+,num }
input token: (15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step173---------------------------
state stack: { 0,6,2,45,54,49,72,93,68,56 }
string stack: { $,S,WD,{,S,id,=,E,+,num }
input token: (15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
R9: E --> num 
---------------------step174---------------------------
state stack: { 0,6,2,45,54,49,72,93,68,89 }
string stack: { $,S,WD,{,S,id,=,E,+,E }
input token: (15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step175---------------------------
state stack: { 0,6,2,45,54,49,72,93,68,89 }
string stack: { $,S,WD,{,S,id,=,E,+,E }
input token: (15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
R10: E --> E + E 
---------------------step176---------------------------
state stack: { 0,6,2,45,54,49,72,93 }
string stack: { $,S,WD,{,S,id,=,E }
input token: (15,;,_),(7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step177---------------------------
state stack: { 0,6,2,45,54,49,72,93,95 }
string stack: { $,S,WD,{,S,id,=,E,; }
input token: (7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step178---------------------------
state stack: { 0,6,2,45,54,49,72,93,95 }
string stack: { $,S,WD,{,S,id,=,E,; }
input token: (7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
R16: S --> id = E ; 
---------------------step179---------------------------
state stack: { 0,6,2,45,54,78 }
string stack: { $,S,WD,{,S,S }
input token: (7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step180---------------------------
state stack: { 0,6,2,45,54,78 }
string stack: { $,S,WD,{,S,S }
input token: (7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
R17: S --> S S 
---------------------step181---------------------------
state stack: { 0,6,2,45,54 }
string stack: { $,S,WD,{,S }
input token: (7,while,_),(9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step182---------------------------
state stack: { 0,6,2,45,54,1 }
string stack: { $,S,WD,{,S,while }
input token: (9,(,_),(0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step183---------------------------
state stack: { 0,6,2,45,54,1,46 }
string stack: { $,S,WD,{,S,while,( }
input token: (0,id,q),(21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step184---------------------------
state stack: { 0,6,2,45,54,1,46,10 }
string stack: { $,S,WD,{,S,while,(,id }
input token: (21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step185---------------------------
state stack: { 0,6,2,45,54,1,46,10 }
string stack: { $,S,WD,{,S,while,(,id }
input token: (21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
R6: E --> id 
---------------------step186---------------------------
state stack: { 0,6,2,45,54,1,46,55 }
string stack: { $,S,WD,{,S,while,(,E }
input token: (21,<,_),(1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step187---------------------------
state stack: { 0,6,2,45,54,1,46,55,28 }
string stack: { $,S,WD,{,S,while,(,E,< }
input token: (1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step188---------------------------
state stack: { 0,6,2,45,54,1,46,55,28 }
string stack: { $,S,WD,{,S,while,(,E,< }
input token: (1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
R26: rop --> < 
---------------------step189---------------------------
state stack: { 0,6,2,45,54,1,46,55,21 }
string stack: { $,S,WD,{,S,while,(,E,rop }
input token: (1,num,5),(10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step190---------------------------
state stack: { 0,6,2,45,54,1,46,55,21,12 }
string stack: { $,S,WD,{,S,while,(,E,rop,num }
input token: (10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step191---------------------------
state stack: { 0,6,2,45,54,1,46,55,21,12 }
string stack: { $,S,WD,{,S,while,(,E,rop,num }
input token: (10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
R9: E --> num 
---------------------step192---------------------------
state stack: { 0,6,2,45,54,1,46,55,21,36 }
string stack: { $,S,WD,{,S,while,(,E,rop,E }
input token: (10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step193---------------------------
state stack: { 0,6,2,45,54,1,46,55,21,36 }
string stack: { $,S,WD,{,S,while,(,E,rop,E }
input token: (10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
R5: E --> E rop E 
---------------------step194---------------------------
state stack: { 0,6,2,45,54,1,46,55 }
string stack: { $,S,WD,{,S,while,(,E }
input token: (10,),_),(8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step195---------------------------
state stack: { 0,6,2,45,54,1,46,55,65 }
string stack: { $,S,WD,{,S,while,(,E,) }
input token: (8,do,_),(30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step196---------------------------
state stack: { 0,6,2,45,54,1,46,55,65,76 }
string stack: { $,S,WD,{,S,while,(,E,),do }
input token: (30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step197---------------------------
state stack: { 0,6,2,45,54,1,46,55,65,76 }
string stack: { $,S,WD,{,S,while,(,E,),do }
input token: (30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
R23: WD --> while ( E ) do 
---------------------step198---------------------------
state stack: { 0,6,2,45,54,48 }
string stack: { $,S,WD,{,S,WD }
input token: (30,{,_),(0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step199---------------------------
state stack: { 0,6,2,45,54,48,75 }
string stack: { $,S,WD,{,S,WD,{ }
input token: (0,id,j),(16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step200---------------------------
state stack: { 0,6,2,45,54,48,75,49 }
string stack: { $,S,WD,{,S,WD,{,id }
input token: (16,=,_),(0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step201---------------------------
state stack: { 0,6,2,45,54,48,75,49,72 }
string stack: { $,S,WD,{,S,WD,{,id,= }
input token: (0,id,j),(12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step202---------------------------
state stack: { 0,6,2,45,54,48,75,49,72,63 }
string stack: { $,S,WD,{,S,WD,{,id,=,id }
input token: (12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step203---------------------------
state stack: { 0,6,2,45,54,48,75,49,72,63 }
string stack: { $,S,WD,{,S,WD,{,id,=,id }
input token: (12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
R6: E --> id 
---------------------step204---------------------------
state stack: { 0,6,2,45,54,48,75,49,72,93 }
string stack: { $,S,WD,{,S,WD,{,id,=,E }
input token: (12,-,_),(1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step205---------------------------
state stack: { 0,6,2,45,54,48,75,49,72,93,69 }
string stack: { $,S,WD,{,S,WD,{,id,=,E,- }
input token: (1,num,1),(15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step206---------------------------
state stack: { 0,6,2,45,54,48,75,49,72,93,69,56 }
string stack: { $,S,WD,{,S,WD,{,id,=,E,-,num }
input token: (15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step207---------------------------
state stack: { 0,6,2,45,54,48,75,49,72,93,69,56 }
string stack: { $,S,WD,{,S,WD,{,id,=,E,-,num }
input token: (15,;,_),(31,},_),(31,},_),(-1,$,_)
R9: E --> num 
---------------------step208---------------------------
state stack: { 0,6,2,45,54,48,75,49,72,93,69,90 }
string stack: { $,S,WD,{,S,WD,{,id,=,E,-,E }
input token: (15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step209---------------------------
state stack: { 0,6,2,45,54,48,75,49,72,93,69,90 }
string stack: { $,S,WD,{,S,WD,{,id,=,E,-,E }
input token: (15,;,_),(31,},_),(31,},_),(-1,$,_)
R11: E --> E - E 
---------------------step210---------------------------
state stack: { 0,6,2,45,54,48,75,49,72,93 }
string stack: { $,S,WD,{,S,WD,{,id,=,E }
input token: (15,;,_),(31,},_),(31,},_),(-1,$,_)
---------------------step211---------------------------
state stack: { 0,6,2,45,54,48,75,49,72,93,95 }
string stack: { $,S,WD,{,S,WD,{,id,=,E,; }
input token: (31,},_),(31,},_),(-1,$,_)
---------------------step212---------------------------
state stack: { 0,6,2,45,54,48,75,49,72,93,95 }
string stack: { $,S,WD,{,S,WD,{,id,=,E,; }
input token: (31,},_),(31,},_),(-1,$,_)
R16: S --> id = E ; 
---------------------step213---------------------------
state stack: { 0,6,2,45,54,48,75,83 }
string stack: { $,S,WD,{,S,WD,{,S }
input token: (31,},_),(31,},_),(-1,$,_)
---------------------step214---------------------------
state stack: { 0,6,2,45,54,48,75,83,99 }
string stack: { $,S,WD,{,S,WD,{,S,} }
input token: (31,},_),(-1,$,_)
---------------------step215---------------------------
state stack: { 0,6,2,45,54,48,75,83,99 }
string stack: { $,S,WD,{,S,WD,{,S,} }
input token: (31,},_),(-1,$,_)
R20: S --> WD { S } 
---------------------step216---------------------------
state stack: { 0,6,2,45,54,78 }
string stack: { $,S,WD,{,S,S }
input token: (31,},_),(-1,$,_)
---------------------step217---------------------------
state stack: { 0,6,2,45,54,78 }
string stack: { $,S,WD,{,S,S }
input token: (31,},_),(-1,$,_)
R17: S --> S S 
---------------------step218---------------------------
state stack: { 0,6,2,45,54 }
string stack: { $,S,WD,{,S }
input token: (31,},_),(-1,$,_)
---------------------step219---------------------------
state stack: { 0,6,2,45,54,80 }
string stack: { $,S,WD,{,S,} }
input token: (-1,$,_)
---------------------step220---------------------------
state stack: { 0,6,2,45,54,80 }
string stack: { $,S,WD,{,S,} }
input token: (-1,$,_)
R20: S --> WD { S } 
---------------------step221---------------------------
state stack: { 0,6,47 }
string stack: { $,S,S }
input token: (-1,$,_)
---------------------step222---------------------------
state stack: { 0,6,47 }
string stack: { $,S,S }
input token: (-1,$,_)
R17: S --> S S 
---------------------step223---------------------------
state stack: { 0,6 }
string stack: { $,S }
input token: (-1,$,_)
---------------------step224---------------------------
state stack: { 0,6 }
string stack: { $,S }
input token: (-1,$,_)
R21: S1 --> S 
sucess!
#############Syntax tree############
S1      
|
|
|                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       

|                                                                                                                               |
|                                                                                                                               |
|                                                                                                                               |

|                                                                                               |                               |                                                       |       ||       
|                                                                                               |                               |                                                       |       ||       
|                                                                                               |                               |                                                       |       ||       
S---------------------------------------------------------------                                S-----------------------        WD----------------------------------------------        {}       
|                                                               |                               |       |       |       |       |       |       |                       |       |               |                                                                                                                                                                                                                                                                                                                                                                                                                       |                                                                                                                               
|                                                               |                               |       |       |       |       |       |       |                       |       |               |                                                                                                                                                                                                                                                                                                                                                                                                                       |                                                                                                                               
|                                                               |                               |       |       |       |       |       |       |                       |       |               |                                                                                                                                                                                                                                                                                                                                                                                                                       |                                                                                                                               
S-------------------------------                                S-----------------------        id=q    =       E       ;       while   (       E---------------        )       do
|                               |                               |       |       |       |                       |                               |       |       |                               |                                                                                                                                                                                                                                                                                                                                                                       |                                               |                                                       |       |                                               |               
|                               |                               |       |       |       |                       |                               |       |       |                               |                                                                                                                                                                                                                                                                                                                                                                       |                                               |                                                       |       |                                               |               
|                               |                               |       |       |       |                       |                               |       |       |                               |                                                                                                                                                                                                                                                                                                                                                                       |                                               |                                                       |       |                                               |               
S-----------------------        S-----------------------        id=k    =       E       ;                       num=0                           E       rop{       S---------------------------------------        }               
|       |       |       |       |       |       |       |                       |                                                               |       |       |                               |                                                                                                                                                                                                                                                               |                                                                                                       |       |       |                       |       |       |       |                       |       |               |       |       |                       |                       
|       |       |       |       |       |       |       |                       |                                                               |       |       |                               |                                                                                                                                                                                                                                                               |                                                                                                       |       |       |                       |       |       |       |                       |       |               |       |       |                       |                       
|       |       |       |       |       |       |       |                       |                                                               |       |       |                               |                                                                                                                                                                                                                                                               |                                                                                                       |       |       |                       |       |       |       |                       |       |               |       |       |                       |                       
id=i    =       E       ;       id=j    =       E       ;                       num=5                                                           id=i    <       num=10                          S-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------        S-----------------------------------------------------------------------------------------------        id=i    =       E---------------        ;       while   (       E---------------        )       do              id=j    =       E---------------        ;                       
                |                               |                                                                                                                                               |                                                                                                                                                                                               |       |                                               |       |                                                       |       |                               |                       |       |       |                               |       |       |                                               |       |       |                               
                |                               |                                                                                                                                               |                                                                                                                                                                                               |       |                                               |       |                                                       |       |                               |                       |       |       |                               |       |       |                                               |       |       |                               
                |                               |                                                                                                                                               |                                                                                                                                                                                               |       |                                               |       |                                                       |       |                               |                       |       |       |                               |       |       |                                               |       |       |                               
                num=0                           num=4                                                                                                                                           T---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------        {       S---------------------------------------        }       C-----------------------------------------------        {       S-----------------------        }                       E       +       E                               E       rop     E                                               E       -       E                               
                                                                                                                                                                                                |                                                                                                                       |       |                                               |       |               |       |       |                       |               |       |       |                       |       |               |       |       |       |                               |               |                               |       |       |                                               |               |                               
                                                                                                                                                                                                |                                                                                                                       |       |                                               |       |               |       |       |                       |               |       |       |                       |       |               |       |       |       |                               |               |                               |       |       |                                               |               |                               
                                                                                                                                                                                                |                                                                                                                       |       |                                               |       |               |       |       |                       |               |       |       |                       |       |               |       |       |       |                               |               |                               |       |       |                                               |               |                               
                                                                                                                                                                                                C---------------------------------------------------------------------------------------------------------------        {       S---------------------------------------        }       else            id=k    =       E---------------        ;               if      (       E---------------        )       then            id=k    =       E       ;                               id=i            num=1                           id=q    <       num=5                                           id=j            num=1                           
                                                                                                                                                                                                |       |       |                                                                                       |       |               |       |       |                       |                                               |       |       |                                       |       |       |                                               |                                                                                                                                                                                                       
                                                                                                                                                                                                |       |       |                                                                                       |       |               |       |       |                       |                                               |       |       |                                       |       |       |                                               |                                                                                                                                                                                                       
                                                                                                                                                                                                |       |       |                                                                                       |       |               |       |       |                       |                                               |       |       |                                       |       |       |                                               |                                                                                                                                                                                                       
                                                                                                                                                                                                if      (       E-----------------------------------------------                                        )       then            id=k    =       E---------------        ;                                               E       +       E                                       E       rop     E                                               id=j                                                                                                                                                                                                    
                                                                                                                                                                                                                |                                               |                                                                               |       |       |                                                       |               |                                       |       |       |                                                                                                                                                                                                                                                       
                                                                                                                                                                                                                |                                               |                                                                               |       |       |                                                       |               |                                       |       |       |                                                                                                                                                                                                                                                       
                                                                                                                                                                                                                |                                               |                                                                               |       |       |                                                       |               |                                       |       |       |                                                                                                                                                                                                                                                       
                                                                                                                                                                                                                EA--------------------------------------        E-------------------------------                                                E       -       E                                                       id=k            num=1                                   id=k    ==      id=i                                                                                                                                                                                                                                                    
                                                                                                                                                                                                                |                                       |       |       |                       |                                               |               |                                                                                                                                                                                                                                                                                                                                                                                       
                                                                                                                                                                                                                |                                       |       |       |                       |                                               |               |                                                                                                                                                                                                                                                                                                                                                                                       
                                                                                                                                                                                                                |                                       |       |       |                       |                                               |               |                                                                                                                                                                                                                                                                                                                                                                                       
                                                                                                                                                                                                                E-------------------------------        and     (       E---------------        )                                               id=k            num=1                                                                                                                                                                                                                                                                                                                                                                                   
                                                                                                                                                                                                                |       |                       |                       |       |       |                                                                                                                                                                                                                                                                                                                                                                                                                                                               
                                                                                                                                                                                                                |       |                       |                       |       |       |                                                                                                                                                                                                                                                                                                                                                                                                                                                               
                                                                                                                                                                                                                |       |                       |                       |       |       |                                                                                                                                                                                                                                                                                                                                                                                                                                                               
                                                                                                                                                                                                                (       E---------------        )                       E       rop     E                                                                                                                                                                                                                                                                                                                                                                                                                                                               
                                                                                                                                                                                                                        |       |       |                               |       |       |                                                                                                                                                                                                                                                                                                                                                                                                                                                               
                                                                                                                                                                                                                        |       |       |                               |       |       |                                                                                                                                                                                                                                                                                                                                                                                                                                                               
                                                                                                                                                                                                                        |       |       |                               |       |       |                                                                                                                                                                                                                                                                                                                                                                                                                                                               
                                                                                                                                                                                                                        E       rop     E                               id=k    >       id=j                                                                                                                                                                                                                                                                                                                                                                                                                                                            
                                                                                                                                                                                                                        |       |       |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
                                                                                                                                                                                                                        |       |       |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
                                                                                                                                                                                                                        |       |       |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
                                                                                                                                                                                                                        id=i    >       num=5                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           
